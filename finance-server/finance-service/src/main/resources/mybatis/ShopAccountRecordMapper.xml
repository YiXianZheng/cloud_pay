<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cloud.finance.dao.ShopAccountRecordDao">

	<resultMap type="ShopAccountRecord" id="shopAccountRecordMap">
		<id column="id" property="id"/>
		<result column="sys_user_id" property="sysUserId"/>
		<result column="type" property="type"/>
		<result column="union_order_no" property="unionOrderNo"/>
		<result column="channel_id" property="channelId"/>
		<result column="total_amount" property="totalAmount"/>
		<result column="poundage" property="poundage"/>
		<result column="own_amount" property="ownAmount"/>
		<result column="status" property="status"/>
        <result column="step" property="step"/>
		<result column="complete_date" property="completeDate"/>
		<result column="create_by" property="createBy"/>
		<result column="create_date" property="createDate"/>
		<result column="update_by" property="updateBy"/>
		<result column="update_date" property="updateDate"/>
		<result column="remarks" property="remarks"/>
		<result column="del_flag" property="delFlag"/>
	</resultMap>

	<select id="getById" resultMap="shopAccountRecordMap">
		SELECT * FROM shop_account_record t WHERE t.id = #{id}
	</select>

	<select id="getByUnionOrderNo" resultMap="shopAccountRecordMap">
		SELECT * FROM shop_account_record t WHERE t.union_order_no = #{unionOrderNo}
	</select>

	<!-- 将指定日期之前的数据移动至历史库的存储过程 -->
	<select id="monthMove">
		call copy_shop_account_record_to_log(#{beginTime});
	</select>

    <!--通道交易统计-->
    <select id="channelSummary" resultType="com.cloud.finance.common.dto.ChannelSummaryDto">
        SELECT t.channel_id AS channelId,
            SUM(IF((t.type=1 AND t.status=2), t.total_amount, 0)) AS totalMoney,
            SUM(IF((t.type=1 AND t.status=2), t.own_amount, 0)) AS totalCharge,
            IFNULL(SUM(IF(t.type=1, 1, 0)), 0) AS totalOrder,
            IFNULL(SUM(IF((t.type=1 AND t.status=2), 1, 0)), 0) AS totalSuccessOrder,
            IFNULL(SUM(IF(t.type=2, 1, 0)), 0) AS totalPaid,
            IFNULL(SUM(IF((t.type=2 AND t.status=2), 1, 0)), 0) AS totalSuccessPaid,
            SUM(IF(t.type=2 AND t.status=2, t.total_amount, 0)) AS totalPaidMoney,
            IFNULL(SUM(IF(t.type=3, 1, 0)), 0) AS totalRiskControlOrder

        FROM shop_account_record t WHERE TO_DAYS(t.create_date) >= TO_DAYS(#{beginTime}) AND TO_DAYS(t.create_date) &lt;= TO_DAYS(#{endTime}) AND t.sys_user_id = #{sysUserId} GROUP BY t.channel_id
    </select>

    <insert id="add" parameterType="ShopAccountRecord">
		<selectKey keyProperty="id" resultType="String" order="BEFORE">
			SELECT UUID()
		</selectKey>
		INSERT INTO shop_account_record (
			id,
			sys_user_id,
			type,
			union_order_no,
			channel_id,
			total_amount,
			poundage,
			own_amount,
			status,
            step,
			complete_date,
			create_by,
			create_date,
			update_by,
			update_date,
			remarks,
			del_flag
		)
		VALUES
			(
				#{id},
				#{sysUserId},
				#{type},
				#{unionOrderNo},
				#{channelId},
				#{totalAmount},
				#{poundage},
				#{ownAmount},
				#{status},
                '1',
				#{completeDate},
				#{createBy},
				#{createDate},
				#{updateBy},
				#{updateDate},
				#{remarks},
				#{delFlag}
			);
	</insert>

    <update id="updateStep">
		UPDATE shop_pay
		SET step=2
        WHERE TO_DAYS(create_date) &lt; TO_DAYS(NOW())
	</update>

	<update id="updateStatus">
		UPDATE shop_account_record
		SET
			status = #{status},
			update_date = now()
        WHERE id = #{id}
	</update>

	<update id="updateChannelId">
		UPDATE shop_account_record
		SET
			channel_id = #{channelId},
			update_date = now()
        WHERE id = #{id}
	</update>

</mapper>